AWSTemplateFormatVersion: '2010-09-09'
Description: 'OAuth Service Infrastructure - ECR Repository and IAM Roles'

Parameters:
  ECRRepositoryName:
    Type: String
    Default: oauth-service
    Description: Name of the ECR repository

Resources:
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ECRRepositoryName
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  # IAM Role for App Runner to access ECR
  AppRunnerECRAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ECRRepositoryName}AppRunnerECRAccessRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: build.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess

Outputs:
  ECRRepositoryUri:
    Description: 'ECR Repository URI'
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepositoryName}'
    Export:
      Name: !Sub '${AWS::StackName}-ECRRepositoryUri'
  
  AppRunnerECRAccessRoleArn:
    Description: 'App Runner ECR Access Role ARN'
    Value: !GetAtt AppRunnerECRAccessRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AppRunnerECRAccessRoleArn'

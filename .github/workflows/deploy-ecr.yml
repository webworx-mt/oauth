name: Build and Push to ECR

on:
  workflow_run:
    workflows: ["Deploy ECR CloudFormation"]
    types: [completed]
    branches: [main]
  push:
    branches: [ main ]
    paths:
      - 'main.go'
      - 'handlers/**'
      - 'models/**'
      - 'router/**'
      - 'server/**'
      - 'Dockerfile'
      - 'docker-compose.yaml'
      - 'go.mod'
      - 'go.sum'

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: oauth-service

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        VERSION_TAG: ${{ github.ref_name == 'main' && 'latest' || github.ref_name }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "version_tag=$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG" >> $GITHUB_OUTPUT

    - name: Output image details
      run: |
        echo "Image pushed: ${{ steps.build-image.outputs.image }}"
        echo "Registry: ${{ steps.login-ecr.outputs.registry }}"
        echo "Repository: ${{ env.ECR_REPOSITORY }}"
        echo "Tag: ${{ github.sha }}"
